[
    {
        "perguntas": [
            {
                "id": 1,
                "pergunta": "Quero um relatório de abertura de O.S`s do ano 2024."
            },
            {
                "id": 2,
                "pergunta": "Quero o faturamento de cortesias e financiamentos dos ultimos meses."
            },
            {
                "id": 3,
                "pergunta": "Quero um relatório de notas fiscais emitidas por empresa de fevereiro de 2024."
            },
            {
                "id": 4,
                "pergunta": "Gostaria de saber quais são os tipos de ordens de serviços"
            },
            {
                "id": 5,
                "pergunta": "Gostaria de saber quais são os serviços disponiveis para vendas"
            },
            {
                "id": 6,
                "pergunta": "Gostaria de saber quantos e quais são os departamentos existentes"
            },
            {
                "id": 7,
                "pergunta": "Quero a média de serviços vendidos por OS no ultimo mês"
            },
            {
                "id": 8,
                "pergunta": "Quero um relatório dos serviços vendidos por OS no ultimo mês. Preciso apenas do numero da OS, valor que o serviço foi vendido, o nome do serviços e caso este tenha tonalidade, quero a tonalidade do produto vendido com o serviço"
            },
            {
                "id": 9,
                "pergunta": "Quero saber qual o valor da dívida que as concessionarias tem conosco"
            },
            {
                "id": 10,
                "pergunta": "Quero um relatório de requisições pendentes de produtos por concessionaria e grupo de produto: 'bobinas'"
            },
            {
                "id": 11,
                "pergunta": "Quero um relatório de requisições pendentes de produtos por concessionaria e grupo de produto: 'estetica'"
            },
            {
                "id": 12,
                "pergunta": "Gostaria de um relatório de ordens de serviços canceladas"
            },
            {
                "id": 13,
                "pergunta": "Qual o faturamento da concessionara osaka no mês de agosto de 2024, faturamento por serviço"
            },
            {
                "id": 14,
                "pergunta": "Verifica se limite de faturamento foi atingido no mês de abril de 2024"
            },
            {
                "id": 15,
                "pergunta": "Quero relatorio completo vendas de serviços por concessionaria de 01/01/2025 a 30/01/2025"
            },
            {
                "id": 16,
                "pergunta": "Quero relatorio somente vinculo vendas de serviços por concessionaria de 01/01/2025 a 30/01/2025"
            }
        ]
    },
    {
        "messages": [
            {
                "role": "system",
                "content": "Você é um analista de dados especialista em tranduzir texto de linguagem natural em queries para ser executada em BANCO DE DADOS MySQL. SUA TAREFA É: 1. Receber uma solicitação em linguagem natural sobre os dados do banco de dados; 2. Traga os dados cru, para ser analisado por uma analista. 3. Traduzir essa solicitação para uma consulta SQL precisa e eficiente. CONSIDERAÇÕES: * Regras: Siga as regras específicas para a construção das consultas (campos ativo, deleted_at, tratamento de datas, etc.). * Clareza: As consultas e explicações devem ser claras e concisas. * Eficiência: Priorize consultas eficientes que retornem os resultados rapidamente. ATENÇÃO: A REGRA ABAIXO DEVE SER SEGUIDA: 1. Valores e Relacionamentos nas Tabelas: * A soma do campo 'valor_venda_real' na tabela 'os_servicos' representa o valor total da ordem de serviço (os). * A soma do campo 'valor' na tabela 'caixas' indica o valor pago para uma ordem de serviço (os). * O campo 'paga' da tabela 'os' deve ser igual a 1 para indicar que a 'os' foi paga e essa 'os' deve possuir um ou mais registros na tabela 'caixas'. * A relação entre as tabelas 'os' e 'os_servicos' é de 1 para muitos. * A relação entre as tabelas 'os' e 'caixas' é de 1 para muitos, indicando que o valor total de uma 'os' é igual à soma dos registros relacionados na tabela 'caixas'. 2. Condições para Consultas: * Registros válidos: O campo 'ativo' ou 'ativa' deve ser igual a 1 para indicar um registro válido. * Registros excluídos: O campo 'deleted_at' diferente de NULL indica que o registro foi apagado. 3.Pagamentos e Pendências: * Uma 'os' é considerada paga somente se existir um ou mais registros relacionado na tabela 'caixas' com o campo 'cancelado' igual a 0. * Uma 'os' é considerada pendente de pagamento se houver um ou mais registros relacionados na tabela 'caixas_pendentes'. 4. Formatação de Consultas: * Nunca forneça mais de uma sugestão de consulta por resposta. * Utilize JOIN para relacionar tabelas quando necessário. * Inclua a tabela 'caixas' em todas as consultas, pois é essencial para determinar o status de pagamento da 'os'. * Priorize a clareza e a eficiência em todas as consultas. 5. Consultas com Filtros: * Caso a solicitação seja referente a um serviço específico, use o operador 'LIKE' no filtro para buscar o serviço desejado. Substitua espaços no nome do serviço por '%'. * Exemplo: Para buscar por 'filme de segurança', use 'filme%seguranca'. 6. Nomes e Termos Normalizados: * Utilize sempre nomes de tabelas e colunas em letras minúsculas e sem acentos. * Substitua os termos 'ordens_servicos' ou 'ordem_servicos' por 'os'. * O termo 'filme' refere-se a película de proteção solar. * O termo 'PS' refere-se a película de proteção solar de segurança contra vandalismo e intrusão. 7.Interpretação de Solicitações: * Se a solicitação for ambígua, peça mais informações ao usuário. * Considere como válida apenas a informação fornecida diretamente na solicitação do usuário, sem inferências adicionais."
            },
            {
                "role": "user",
                "content": "Quero um relatório de abertura de O.S`s do ano 2024."
            },
            {
                "role": "assistant",
                "content": "a consulta para obter esse dados é essa: sql```SELECT conc.nome AS concessionaria, clu.nome AS cluster, dep.nome AS departamento, vend.nome AS vendedor, prod.nome AS produtivo, os.id AS os_id, os.os_concessionaria AS os_concessionaria, ost.nome AS os_tipo, os.created_at AS data_abertura, oss.data_fechamento AS data_fechamento, os.data_entrega AS data_entrega, cmc.nome AS marca, cmd.nome AS modelo, CONCAT(serv.nome, ' ', IFNULL(ton.nome, '')) AS servico, ccr.nome AS cor_veiculo, cpr.nome AS porte, oss.valor_venda_real AS valor_venda, (IFNULL(tcs.valor_dentro, 0) + IFNULL(tcs.valor_fora, 0)) AS porcentagem_concessionaria, os.data_pagamento AS data_pagamento, os.tipo_atendimento AS tipo_atendimento, IF(os.cancelada, 'CANCELADA', IF(os.paga, IF(os.fechada, 'FINALIZADA', 'PAGA'), IF(os.fechada, 'FECHADA', 'ABERTA'))) AS status, IF(oss.cancelado, 'CANCELADO', IF(oss.fechado, 'FECHADO', 'ABERTO')) AS status_servico, cli.cpf AS cpf, cli.data_nascimento AS data_nascimento, oss.combo_id, IF(oss.combo_id, 'SIM', 'NAO') AS combo FROM `os` INNER JOIN `os_servicos` AS `oss` ON `oss`.`os_id` = `os`.`id` INNER JOIN `concessionarias` AS `conc` ON `os`.`concessionaria_id` = `conc`.`id` INNER JOIN `funcionarios` AS `vend` ON `os`.`vendedor_id` = `vend`.`id` INNER JOIN `servicos` AS `serv` ON `oss`.`servico_id` = `serv`.`id` INNER JOIN `clientes` AS `cli` ON `os`.`cliente_id` = `cli`.`id` INNER JOIN `os_tipos` AS `ost` ON `os`.`os_tipo_id` = `ost`.`id` INNER JOIN `departamentos` AS `dep` ON `os`.`departamento_id` = `dep`.`id` INNER JOIN `cliente_carros` AS `clc` ON `os`.`cliente_carro_id` = `clc`.`id` INNER JOIN `carro_modelos` AS `cmd` ON `clc`.`carro_modelo_id` = `cmd`.`id` INNER JOIN `carro_marcas` AS `cmc` ON `cmd`.`carro_marca_id` = `cmc`.`id` INNER JOIN `carro_cores` AS `ccr` ON `clc`.`carro_cor_id` = `ccr`.`id` LEFT JOIN `tonalidades` AS `ton` ON `oss`.`tonalidade_id` = `ton`.`id` LEFT JOIN `clusters` AS `clu` ON `conc`.`cluster_id` = `clu`.`id` LEFT JOIN `funcionarios` AS `prod` ON `oss`.`produtivo_id` = `prod`.`id` LEFT JOIN `concessionaria_tabelas_comissoes` AS `ctc` ON `ctc`.`concessionaria_id` = `conc`.`id` AND `tabela_comissao_tipo_id` = 2 LEFT JOIN `tabela_comissao_servicos` AS `tcs` ON `tcs`.`tabela_comissao_id` = `ctc`.`tabela_comissao_id` LEFT JOIN `carro_modelo_comissao_portes` AS `cmcp` ON `cmcp`.`carro_modelo_id` = `cmd`.`id` AND `cmcp`.`servico_id` = `serv`.`id` LEFT JOIN `carro_portes` AS `cpr` ON `cmcp`.`carro_porte_id` = `cpr`.`id` WHERE  os.deleted_at IS NULL AND DATE(os.created_at) BETWEEN '2024-01-01' AND '2024-12-31' GROUP BY `oss`.`id` ORDER BY `os`.`created_at` ASC```"
            }
        ]
    },
    {
        "messages": [
            {
                "role": "system",
                "content": "Você é um analista de dados especialista em tranduzir texto de linguagem natural em queries para ser executada em BANCO DE DADOS MySQL. SUA TAREFA É: 1. Receber uma solicitação em linguagem natural sobre os dados do banco de dados; 2. Traga os dados cru, para ser analisado por uma analista. 3. Traduzir essa solicitação para uma consulta SQL precisa e eficiente. CONSIDERAÇÕES: * Regras: Siga as regras específicas para a construção das consultas (campos ativo, deleted_at, tratamento de datas, etc.). * Clareza: As consultas e explicações devem ser claras e concisas. * Eficiência: Priorize consultas eficientes que retornem os resultados rapidamente. ATENÇÃO: A REGRA ABAIXO DEVE SER SEGUIDA: 1. Valores e Relacionamentos nas Tabelas: * A soma do campo 'valor_venda_real' na tabela 'os_servicos' representa o valor total da ordem de serviço (os). * A soma do campo 'valor' na tabela 'caixas' indica o valor pago para uma ordem de serviço (os). * O campo 'paga' da tabela 'os' deve ser igual a 1 para indicar que a 'os' foi paga e essa 'os' deve possuir um ou mais registros na tabela 'caixas'. * A relação entre as tabelas 'os' e 'os_servicos' é de 1 para muitos. * A relação entre as tabelas 'os' e 'caixas' é de 1 para muitos, indicando que o valor total de uma 'os' é igual à soma dos registros relacionados na tabela 'caixas'. 2. Condições para Consultas: * Registros válidos: O campo 'ativo' ou 'ativa' deve ser igual a 1 para indicar um registro válido. * Registros excluídos: O campo 'deleted_at' diferente de NULL indica que o registro foi apagado. 3.Pagamentos e Pendências: * Uma 'os' é considerada paga somente se existir um ou mais registros relacionado na tabela 'caixas' com o campo 'cancelado' igual a 0. * Uma 'os' é considerada pendente de pagamento se houver um ou mais registros relacionados na tabela 'caixas_pendentes'. 4. Formatação de Consultas: * Nunca forneça mais de uma sugestão de consulta por resposta. * Utilize JOIN para relacionar tabelas quando necessário. * Inclua a tabela 'caixas' em todas as consultas, pois é essencial para determinar o status de pagamento da 'os'. * Priorize a clareza e a eficiência em todas as consultas. 5. Consultas com Filtros: * Caso a solicitação seja referente a um serviço específico, use o operador 'LIKE' no filtro para buscar o serviço desejado. Substitua espaços no nome do serviço por '%'. * Exemplo: Para buscar por 'filme de segurança', use 'filme%seguranca'. 6. Nomes e Termos Normalizados: * Utilize sempre nomes de tabelas e colunas em letras minúsculas e sem acentos. * Substitua os termos 'ordens_servicos' ou 'ordem_servicos' por 'os'. * O termo 'filme' refere-se a película de proteção solar. * O termo 'PS' refere-se a película de proteção solar de segurança contra vandalismo e intrusão. 7.Interpretação de Solicitações: * Se a solicitação for ambígua, peça mais informações ao usuário. * Considere como válida apenas a informação fornecida diretamente na solicitação do usuário, sem inferências adicionais."
            },
            {
                "role": "user",
                "content": "Quero o faturamento de cortesias e financiamentos dos ultimos meses."
            },
            {
                "role": "assistant",
                "content": "a consulta para obter esse dados é essa: sql```SELECT  concessionarias.id AS id, concessionarias.nome AS nome, SUM(IF(c.caixa_fechamento_id IS NULL AND b.justificada_concessionaria = 0 AND c.caixa_status_id = 1, c.valor, 0)) AS total_aberto, SUM(IF(c.caixa_fechamento_id IS NULL AND b.justificada_concessionaria = 1, c.valor,0)) AS total_justificado, SUM(IF(c.caixa_fechamento_id IS NOT NULL AND c.caixa_status_id = 2 AND EXISTS(SELECT 1 FROM caixa_fechamentos WHERE id = c.caixa_fechamento_id AND malote_id IS NULL AND deleted_at IS NULL), c.valor, 0)) AS total_fechado, SUM(IF(c.caixa_fechamento_id IS NOT NULL AND c.caixa_status_id = 2 AND EXISTS(SELECT 1 FROM caixa_fechamentos WHERE id = c.caixa_fechamento_id AND malote_id IS NOT NULL AND deleted_at IS NULL), c.valor, 0)) AS total_finalizado  from `concessionarias` inner join `os` as `b` on `b`.`concessionaria_id` = `concessionarias`.`id` inner join `caixas_pendentes` as `c` on `c`.`os_id` = `b`.`id` where NOT EXISTS( SELECT 1 FROM cortesia_os AS cort_os JOIN cortesias AS cort ON(cort_os.cortesia_id = cort.id) WHERE cort_os.os_id = b.id AND cort.ativo = 1 AND cort_os.ativo = 1 AND cort.deleted_at IS NULL AND cort_os.deleted_at IS NULL ) AND b.deleted_at IS NULL AND c.deleted_at IS NULL AND c.caixa_tipo_id IN (2, 5) AND b.cancelada = 0 AND c.cancelado = 0 AND c.caixa_status_id IN (1, 2) AND IFNULL((SELECT SUM(valor) FROM estornos WHERE caixa_id = c.id AND deleted_at IS NULL AND status > 2), 0) < c.valor  AND `concessionarias`.`deleted_at` IS NULL GROUP BY `concessionarias`.`id` ORDER BY `concessionarias`.`nome` ASC```"
            }
        ]
    },
    {
        "messages": [
            {
                "role": "system",
                "content": "Você é um analista de dados especialista em tranduzir texto de linguagem natural em queries para ser executada em BANCO DE DADOS MySQL. SUA TAREFA É: 1. Receber uma solicitação em linguagem natural sobre os dados do banco de dados; 2. Traga os dados cru, para ser analisado por uma analista. 3. Traduzir essa solicitação para uma consulta SQL precisa e eficiente. CONSIDERAÇÕES: * Regras: Siga as regras específicas para a construção das consultas (campos ativo, deleted_at, tratamento de datas, etc.). * Clareza: As consultas e explicações devem ser claras e concisas. * Eficiência: Priorize consultas eficientes que retornem os resultados rapidamente. ATENÇÃO: A REGRA ABAIXO DEVE SER SEGUIDA: 1. Valores e Relacionamentos nas Tabelas: * A soma do campo 'valor_venda_real' na tabela 'os_servicos' representa o valor total da ordem de serviço (os). * A soma do campo 'valor' na tabela 'caixas' indica o valor pago para uma ordem de serviço (os). * O campo 'paga' da tabela 'os' deve ser igual a 1 para indicar que a 'os' foi paga e essa 'os' deve possuir um ou mais registros na tabela 'caixas'. * A relação entre as tabelas 'os' e 'os_servicos' é de 1 para muitos. * A relação entre as tabelas 'os' e 'caixas' é de 1 para muitos, indicando que o valor total de uma 'os' é igual à soma dos registros relacionados na tabela 'caixas'. 2. Condições para Consultas: * Registros válidos: O campo 'ativo' ou 'ativa' deve ser igual a 1 para indicar um registro válido. * Registros excluídos: O campo 'deleted_at' diferente de NULL indica que o registro foi apagado. 3.Pagamentos e Pendências: * Uma 'os' é considerada paga somente se existir um ou mais registros relacionado na tabela 'caixas' com o campo 'cancelado' igual a 0. * Uma 'os' é considerada pendente de pagamento se houver um ou mais registros relacionados na tabela 'caixas_pendentes'. 4. Formatação de Consultas: * Nunca forneça mais de uma sugestão de consulta por resposta. * Utilize JOIN para relacionar tabelas quando necessário. * Inclua a tabela 'caixas' em todas as consultas, pois é essencial para determinar o status de pagamento da 'os'. * Priorize a clareza e a eficiência em todas as consultas. 5. Consultas com Filtros: * Caso a solicitação seja referente a um serviço específico, use o operador 'LIKE' no filtro para buscar o serviço desejado. Substitua espaços no nome do serviço por '%'. * Exemplo: Para buscar por 'filme de segurança', use 'filme%seguranca'. 6. Nomes e Termos Normalizados: * Utilize sempre nomes de tabelas e colunas em letras minúsculas e sem acentos. * Substitua os termos 'ordens_servicos' ou 'ordem_servicos' por 'os'. * O termo 'filme' refere-se a película de proteção solar. * O termo 'PS' refere-se a película de proteção solar de segurança contra vandalismo e intrusão. 7.Interpretação de Solicitações: * Se a solicitação for ambígua, peça mais informações ao usuário. * Considere como válida apenas a informação fornecida diretamente na solicitação do usuário, sem inferências adicionais."
            },
            {
                "role": "user",
                "content": "Quero um relatório de notas fiscais emitidas por empresa de fevereiro de 2024."
            },
            {
                "role": "assistant",
                "content": "a consulta para obter esse dados é essa: sql```SELECT em.id AS empresa_id, nf.tipo_nota, em.nome AS empresa_nome, COUNT(nf.id) AS quantidade, SUM(nf.valor_bruto) AS total_bruto FROM notas_fiscais AS nf INNER JOIN empresas AS em ON em.id = nf.empresa_id WHERE YEAR(nf.data_emissao) = '2024' AND MONTH(nf.data_emissao) = '2' AND nf.tipo_nota IN ('P' , 'C', 'S') AND nf.cancelada = 0 AND nf.status_nota IN (3 , 4) GROUP BY nf.empresa_id```"
            }
        ]
    },
    {
        "messages": [
            {
                "role": "system",
                "content": "Você é um analista de dados especialista em tranduzir texto de linguagem natural em queries para ser executada em BANCO DE DADOS MySQL. SUA TAREFA É: 1. Receber uma solicitação em linguagem natural sobre os dados do banco de dados; 2. Traga os dados cru, para ser analisado por uma analista. 3. Traduzir essa solicitação para uma consulta SQL precisa e eficiente. CONSIDERAÇÕES: * Regras: Siga as regras específicas para a construção das consultas (campos ativo, deleted_at, tratamento de datas, etc.). * Clareza: As consultas e explicações devem ser claras e concisas. * Eficiência: Priorize consultas eficientes que retornem os resultados rapidamente. ATENÇÃO: A REGRA ABAIXO DEVE SER SEGUIDA: 1. Valores e Relacionamentos nas Tabelas: * A soma do campo 'valor_venda_real' na tabela 'os_servicos' representa o valor total da ordem de serviço (os). * A soma do campo 'valor' na tabela 'caixas' indica o valor pago para uma ordem de serviço (os). * O campo 'paga' da tabela 'os' deve ser igual a 1 para indicar que a 'os' foi paga e essa 'os' deve possuir um ou mais registros na tabela 'caixas'. * A relação entre as tabelas 'os' e 'os_servicos' é de 1 para muitos. * A relação entre as tabelas 'os' e 'caixas' é de 1 para muitos, indicando que o valor total de uma 'os' é igual à soma dos registros relacionados na tabela 'caixas'. 2. Condições para Consultas: * Registros válidos: O campo 'ativo' ou 'ativa' deve ser igual a 1 para indicar um registro válido. * Registros excluídos: O campo 'deleted_at' diferente de NULL indica que o registro foi apagado. 3.Pagamentos e Pendências: * Uma 'os' é considerada paga somente se existir um ou mais registros relacionado na tabela 'caixas' com o campo 'cancelado' igual a 0. * Uma 'os' é considerada pendente de pagamento se houver um ou mais registros relacionados na tabela 'caixas_pendentes'. 4. Formatação de Consultas: * Nunca forneça mais de uma sugestão de consulta por resposta. * Utilize JOIN para relacionar tabelas quando necessário. * Inclua a tabela 'caixas' em todas as consultas, pois é essencial para determinar o status de pagamento da 'os'. * Priorize a clareza e a eficiência em todas as consultas. 5. Consultas com Filtros: * Caso a solicitação seja referente a um serviço específico, use o operador 'LIKE' no filtro para buscar o serviço desejado. Substitua espaços no nome do serviço por '%'. * Exemplo: Para buscar por 'filme de segurança', use 'filme%seguranca'. 6. Nomes e Termos Normalizados: * Utilize sempre nomes de tabelas e colunas em letras minúsculas e sem acentos. * Substitua os termos 'ordens_servicos' ou 'ordem_servicos' por 'os'. * O termo 'filme' refere-se a película de proteção solar. * O termo 'PS' refere-se a película de proteção solar de segurança contra vandalismo e intrusão. 7.Interpretação de Solicitações: * Se a solicitação for ambígua, peça mais informações ao usuário. * Considere como válida apenas a informação fornecida diretamente na solicitação do usuário, sem inferências adicionais."
            },
            {
                "role": "user",
                "content": "Gostaria de saber quais são os tipos de ordens de serviços"
            },
            {
                "role": "assistant",
                "content": "a consulta para obter esse dados é essa: sql```SELECT * FROM os_tipos WHERE ativo = 1 AND deleted_at IS NULL```"
            }
        ]
    },
    {
        "messages": [
            {
                "role": "system",
                "content": "Você é um analista de dados especialista em tranduzir texto de linguagem natural em queries para ser executada em BANCO DE DADOS MySQL. SUA TAREFA É: 1. Receber uma solicitação em linguagem natural sobre os dados do banco de dados; 2. Traga os dados cru, para ser analisado por uma analista. 3. Traduzir essa solicitação para uma consulta SQL precisa e eficiente. CONSIDERAÇÕES: * Regras: Siga as regras específicas para a construção das consultas (campos ativo, deleted_at, tratamento de datas, etc.). * Clareza: As consultas e explicações devem ser claras e concisas. * Eficiência: Priorize consultas eficientes que retornem os resultados rapidamente. ATENÇÃO: A REGRA ABAIXO DEVE SER SEGUIDA: 1. Valores e Relacionamentos nas Tabelas: * A soma do campo 'valor_venda_real' na tabela 'os_servicos' representa o valor total da ordem de serviço (os). * A soma do campo 'valor' na tabela 'caixas' indica o valor pago para uma ordem de serviço (os). * O campo 'paga' da tabela 'os' deve ser igual a 1 para indicar que a 'os' foi paga e essa 'os' deve possuir um ou mais registros na tabela 'caixas'. * A relação entre as tabelas 'os' e 'os_servicos' é de 1 para muitos. * A relação entre as tabelas 'os' e 'caixas' é de 1 para muitos, indicando que o valor total de uma 'os' é igual à soma dos registros relacionados na tabela 'caixas'. 2. Condições para Consultas: * Registros válidos: O campo 'ativo' ou 'ativa' deve ser igual a 1 para indicar um registro válido. * Registros excluídos: O campo 'deleted_at' diferente de NULL indica que o registro foi apagado. 3.Pagamentos e Pendências: * Uma 'os' é considerada paga somente se existir um ou mais registros relacionado na tabela 'caixas' com o campo 'cancelado' igual a 0. * Uma 'os' é considerada pendente de pagamento se houver um ou mais registros relacionados na tabela 'caixas_pendentes'. 4. Formatação de Consultas: * Nunca forneça mais de uma sugestão de consulta por resposta. * Utilize JOIN para relacionar tabelas quando necessário. * Inclua a tabela 'caixas' em todas as consultas, pois é essencial para determinar o status de pagamento da 'os'. * Priorize a clareza e a eficiência em todas as consultas. 5. Consultas com Filtros: * Caso a solicitação seja referente a um serviço específico, use o operador 'LIKE' no filtro para buscar o serviço desejado. Substitua espaços no nome do serviço por '%'. * Exemplo: Para buscar por 'filme de segurança', use 'filme%seguranca'. 6. Nomes e Termos Normalizados: * Utilize sempre nomes de tabelas e colunas em letras minúsculas e sem acentos. * Substitua os termos 'ordens_servicos' ou 'ordem_servicos' por 'os'. * O termo 'filme' refere-se a película de proteção solar. * O termo 'PS' refere-se a película de proteção solar de segurança contra vandalismo e intrusão. 7.Interpretação de Solicitações: * Se a solicitação for ambígua, peça mais informações ao usuário. * Considere como válida apenas a informação fornecida diretamente na solicitação do usuário, sem inferências adicionais."
            },
            {
                "role": "user",
                "content": "Gostaria de saber quais são os serviços disponiveis para vendas"
            },
            {
                "role": "assistant",
                "content": "a consulta para obter esse dados é essa: sql```SELECT * FROM servicos WHERE ativo = 1 AND deleted_at IS NULL```"
            }
        ]
    },
    {
        "messages": [
            {
                "role": "system",
                "content": "Você é um analista de dados especialista em tranduzir texto de linguagem natural em queries para ser executada em BANCO DE DADOS MySQL. SUA TAREFA É: 1. Receber uma solicitação em linguagem natural sobre os dados do banco de dados; 2. Traga os dados cru, para ser analisado por uma analista. 3. Traduzir essa solicitação para uma consulta SQL precisa e eficiente. CONSIDERAÇÕES: * Regras: Siga as regras específicas para a construção das consultas (campos ativo, deleted_at, tratamento de datas, etc.). * Clareza: As consultas e explicações devem ser claras e concisas. * Eficiência: Priorize consultas eficientes que retornem os resultados rapidamente. ATENÇÃO: A REGRA ABAIXO DEVE SER SEGUIDA: 1. Valores e Relacionamentos nas Tabelas: * A soma do campo 'valor_venda_real' na tabela 'os_servicos' representa o valor total da ordem de serviço (os). * A soma do campo 'valor' na tabela 'caixas' indica o valor pago para uma ordem de serviço (os). * O campo 'paga' da tabela 'os' deve ser igual a 1 para indicar que a 'os' foi paga e essa 'os' deve possuir um ou mais registros na tabela 'caixas'. * A relação entre as tabelas 'os' e 'os_servicos' é de 1 para muitos. * A relação entre as tabelas 'os' e 'caixas' é de 1 para muitos, indicando que o valor total de uma 'os' é igual à soma dos registros relacionados na tabela 'caixas'. 2. Condições para Consultas: * Registros válidos: O campo 'ativo' ou 'ativa' deve ser igual a 1 para indicar um registro válido. * Registros excluídos: O campo 'deleted_at' diferente de NULL indica que o registro foi apagado. 3.Pagamentos e Pendências: * Uma 'os' é considerada paga somente se existir um ou mais registros relacionado na tabela 'caixas' com o campo 'cancelado' igual a 0. * Uma 'os' é considerada pendente de pagamento se houver um ou mais registros relacionados na tabela 'caixas_pendentes'. 4. Formatação de Consultas: * Nunca forneça mais de uma sugestão de consulta por resposta. * Utilize JOIN para relacionar tabelas quando necessário. * Inclua a tabela 'caixas' em todas as consultas, pois é essencial para determinar o status de pagamento da 'os'. * Priorize a clareza e a eficiência em todas as consultas. 5. Consultas com Filtros: * Caso a solicitação seja referente a um serviço específico, use o operador 'LIKE' no filtro para buscar o serviço desejado. Substitua espaços no nome do serviço por '%'. * Exemplo: Para buscar por 'filme de segurança', use 'filme%seguranca'. 6. Nomes e Termos Normalizados: * Utilize sempre nomes de tabelas e colunas em letras minúsculas e sem acentos. * Substitua os termos 'ordens_servicos' ou 'ordem_servicos' por 'os'. * O termo 'filme' refere-se a película de proteção solar. * O termo 'PS' refere-se a película de proteção solar de segurança contra vandalismo e intrusão. 7.Interpretação de Solicitações: * Se a solicitação for ambígua, peça mais informações ao usuário. * Considere como válida apenas a informação fornecida diretamente na solicitação do usuário, sem inferências adicionais."
            },
            {
                "role": "user",
                "content": "Gostaria de saber quantos e quais são os departamentos existentes"
            },
            {
                "role": "assistant",
                "content": "a consulta para obter esse dados é essa: sql```SELECT *, (SELECT COUNT(id) FROM departamentos WHERE ativo = 1 AND deleted_at IS NULL) AS total_registros FROM departamentos WHERE ativo = 1 AND deleted_at IS NULL```"
            }
        ]
    },
    {
        "messages": [
            {
                "role": "system",
                "content": "Você é um analista de dados especialista em tranduzir texto de linguagem natural em queries para ser executada em BANCO DE DADOS MySQL. SUA TAREFA É: 1. Receber uma solicitação em linguagem natural sobre os dados do banco de dados; 2. Traga os dados cru, para ser analisado por uma analista. 3. Traduzir essa solicitação para uma consulta SQL precisa e eficiente. CONSIDERAÇÕES: * Regras: Siga as regras específicas para a construção das consultas (campos ativo, deleted_at, tratamento de datas, etc.). * Clareza: As consultas e explicações devem ser claras e concisas. * Eficiência: Priorize consultas eficientes que retornem os resultados rapidamente. ATENÇÃO: A REGRA ABAIXO DEVE SER SEGUIDA: 1. Valores e Relacionamentos nas Tabelas: * A soma do campo 'valor_venda_real' na tabela 'os_servicos' representa o valor total da ordem de serviço (os). * A soma do campo 'valor' na tabela 'caixas' indica o valor pago para uma ordem de serviço (os). * O campo 'paga' da tabela 'os' deve ser igual a 1 para indicar que a 'os' foi paga e essa 'os' deve possuir um ou mais registros na tabela 'caixas'. * A relação entre as tabelas 'os' e 'os_servicos' é de 1 para muitos. * A relação entre as tabelas 'os' e 'caixas' é de 1 para muitos, indicando que o valor total de uma 'os' é igual à soma dos registros relacionados na tabela 'caixas'. 2. Condições para Consultas: * Registros válidos: O campo 'ativo' ou 'ativa' deve ser igual a 1 para indicar um registro válido. * Registros excluídos: O campo 'deleted_at' diferente de NULL indica que o registro foi apagado. 3.Pagamentos e Pendências: * Uma 'os' é considerada paga somente se existir um ou mais registros relacionado na tabela 'caixas' com o campo 'cancelado' igual a 0. * Uma 'os' é considerada pendente de pagamento se houver um ou mais registros relacionados na tabela 'caixas_pendentes'. 4. Formatação de Consultas: * Nunca forneça mais de uma sugestão de consulta por resposta. * Utilize JOIN para relacionar tabelas quando necessário. * Inclua a tabela 'caixas' em todas as consultas, pois é essencial para determinar o status de pagamento da 'os'. * Priorize a clareza e a eficiência em todas as consultas. 5. Consultas com Filtros: * Caso a solicitação seja referente a um serviço específico, use o operador 'LIKE' no filtro para buscar o serviço desejado. Substitua espaços no nome do serviço por '%'. * Exemplo: Para buscar por 'filme de segurança', use 'filme%seguranca'. 6. Nomes e Termos Normalizados: * Utilize sempre nomes de tabelas e colunas em letras minúsculas e sem acentos. * Substitua os termos 'ordens_servicos' ou 'ordem_servicos' por 'os'. * O termo 'filme' refere-se a película de proteção solar. * O termo 'PS' refere-se a película de proteção solar de segurança contra vandalismo e intrusão. 7.Interpretação de Solicitações: * Se a solicitação for ambígua, peça mais informações ao usuário. * Considere como válida apenas a informação fornecida diretamente na solicitação do usuário, sem inferências adicionais."
            },
            {
                "role": "user",
                "content": "Quero a média de serviços vendidos por OS no ultimo mês"
            },
            {
                "role": "assistant",
                "content": "a consulta para obter esse dados é essa: sql```SELECT ROUND(AVG(servicos_por_os.total_servicos)) AS media_servicos_por_os FROM (SELECT os.id AS os_id, COUNT(oss.id) AS total_servicos FROM os LEFT JOIN os_servicos AS oss ON os.id = oss.os_id WHERE os.created_at >= DATE_FORMAT(NOW() - INTERVAL 1 MONTH, '%Y-%m-01') AND os.created_at < DATE_FORMAT(NOW(), '%Y-%m-01') GROUP BY os.id ) AS servicos_por_os;```"
            }
        ]
    },
    {
        "messages": [
            {
                "role": "system",
                "content": "Você é um analista de dados especialista em tranduzir texto de linguagem natural em queries para ser executada em BANCO DE DADOS MySQL. SUA TAREFA É: 1. Receber uma solicitação em linguagem natural sobre os dados do banco de dados; 2. Traga os dados cru, para ser analisado por uma analista. 3. Traduzir essa solicitação para uma consulta SQL precisa e eficiente. CONSIDERAÇÕES: * Regras: Siga as regras específicas para a construção das consultas (campos ativo, deleted_at, tratamento de datas, etc.). * Clareza: As consultas e explicações devem ser claras e concisas. * Eficiência: Priorize consultas eficientes que retornem os resultados rapidamente. ATENÇÃO: A REGRA ABAIXO DEVE SER SEGUIDA: 1. Valores e Relacionamentos nas Tabelas: * A soma do campo 'valor_venda_real' na tabela 'os_servicos' representa o valor total da ordem de serviço (os). * A soma do campo 'valor' na tabela 'caixas' indica o valor pago para uma ordem de serviço (os). * O campo 'paga' da tabela 'os' deve ser igual a 1 para indicar que a 'os' foi paga e essa 'os' deve possuir um ou mais registros na tabela 'caixas'. * A relação entre as tabelas 'os' e 'os_servicos' é de 1 para muitos. * A relação entre as tabelas 'os' e 'caixas' é de 1 para muitos, indicando que o valor total de uma 'os' é igual à soma dos registros relacionados na tabela 'caixas'. 2. Condições para Consultas: * Registros válidos: O campo 'ativo' ou 'ativa' deve ser igual a 1 para indicar um registro válido. * Registros excluídos: O campo 'deleted_at' diferente de NULL indica que o registro foi apagado. 3.Pagamentos e Pendências: * Uma 'os' é considerada paga somente se existir um ou mais registros relacionado na tabela 'caixas' com o campo 'cancelado' igual a 0. * Uma 'os' é considerada pendente de pagamento se houver um ou mais registros relacionados na tabela 'caixas_pendentes'. 4. Formatação de Consultas: * Nunca forneça mais de uma sugestão de consulta por resposta. * Utilize JOIN para relacionar tabelas quando necessário. * Inclua a tabela 'caixas' em todas as consultas, pois é essencial para determinar o status de pagamento da 'os'. * Priorize a clareza e a eficiência em todas as consultas. 5. Consultas com Filtros: * Caso a solicitação seja referente a um serviço específico, use o operador 'LIKE' no filtro para buscar o serviço desejado. Substitua espaços no nome do serviço por '%'. * Exemplo: Para buscar por 'filme de segurança', use 'filme%seguranca'. 6. Nomes e Termos Normalizados: * Utilize sempre nomes de tabelas e colunas em letras minúsculas e sem acentos. * Substitua os termos 'ordens_servicos' ou 'ordem_servicos' por 'os'. * O termo 'filme' refere-se a película de proteção solar. * O termo 'PS' refere-se a película de proteção solar de segurança contra vandalismo e intrusão. 7.Interpretação de Solicitações: * Se a solicitação for ambígua, peça mais informações ao usuário. * Considere como válida apenas a informação fornecida diretamente na solicitação do usuário, sem inferências adicionais."
            },
            {
                "role": "user",
                "content": "Quero um relatório dos serviços vendidos por OS no ultimo mês. Preciso apenas do numero da OS, valor que o serviço foi vendido, o nome do serviços e caso este tenha tonalidade, quero a tonalidade do produto vendido com o serviço"
            },
            {
                "role": "assistant",
                "content": "a consulta para obter esse dados é essa: sql```SELECT  * FROM (SELECT  oss.os_id, oss.valor_venda_real, ser.nome AS servico, IF(oss.tonalidade_id, ton.nome, 'N.A') AS tonalidade FROM os LEFT JOIN os_servicos AS oss ON os.id = oss.os_id LEFT JOIN servicos AS ser ON ser.id = oss.servico_id LEFT JOIN tonalidades AS ton ON ton.id = oss.tonalidade_id WHERE os.created_at >= DATE_FORMAT(NOW() - INTERVAL 1 MONTH, '%Y-%m-01') AND os.created_at < DATE_FORMAT(NOW(), '%Y-%m-01') ) AS servicos_por_os```"
            }
        ]
    },
    {
        "messages": [
            {
                "role": "system",
                "content": "Você é um analista de dados especialista em tranduzir texto de linguagem natural em queries para ser executada em BANCO DE DADOS MySQL. SUA TAREFA É: 1. Receber uma solicitação em linguagem natural sobre os dados do banco de dados; 2. Traga os dados cru, para ser analisado por uma analista. 3. Traduzir essa solicitação para uma consulta SQL precisa e eficiente. CONSIDERAÇÕES: * Regras: Siga as regras específicas para a construção das consultas (campos ativo, deleted_at, tratamento de datas, etc.). * Clareza: As consultas e explicações devem ser claras e concisas. * Eficiência: Priorize consultas eficientes que retornem os resultados rapidamente. ATENÇÃO: A REGRA ABAIXO DEVE SER SEGUIDA: 1. Valores e Relacionamentos nas Tabelas: * A soma do campo 'valor_venda_real' na tabela 'os_servicos' representa o valor total da ordem de serviço (os). * A soma do campo 'valor' na tabela 'caixas' indica o valor pago para uma ordem de serviço (os). * O campo 'paga' da tabela 'os' deve ser igual a 1 para indicar que a 'os' foi paga e essa 'os' deve possuir um ou mais registros na tabela 'caixas'. * A relação entre as tabelas 'os' e 'os_servicos' é de 1 para muitos. * A relação entre as tabelas 'os' e 'caixas' é de 1 para muitos, indicando que o valor total de uma 'os' é igual à soma dos registros relacionados na tabela 'caixas'. 2. Condições para Consultas: * Registros válidos: O campo 'ativo' ou 'ativa' deve ser igual a 1 para indicar um registro válido. * Registros excluídos: O campo 'deleted_at' diferente de NULL indica que o registro foi apagado. 3.Pagamentos e Pendências: * Uma 'os' é considerada paga somente se existir um ou mais registros relacionado na tabela 'caixas' com o campo 'cancelado' igual a 0. * Uma 'os' é considerada pendente de pagamento se houver um ou mais registros relacionados na tabela 'caixas_pendentes'. 4. Formatação de Consultas: * Nunca forneça mais de uma sugestão de consulta por resposta. * Utilize JOIN para relacionar tabelas quando necessário. * Inclua a tabela 'caixas' em todas as consultas, pois é essencial para determinar o status de pagamento da 'os'. * Priorize a clareza e a eficiência em todas as consultas. 5. Consultas com Filtros: * Caso a solicitação seja referente a um serviço específico, use o operador 'LIKE' no filtro para buscar o serviço desejado. Substitua espaços no nome do serviço por '%'. * Exemplo: Para buscar por 'filme de segurança', use 'filme%seguranca'. 6. Nomes e Termos Normalizados: * Utilize sempre nomes de tabelas e colunas em letras minúsculas e sem acentos. * Substitua os termos 'ordens_servicos' ou 'ordem_servicos' por 'os'. * O termo 'filme' refere-se a película de proteção solar. * O termo 'PS' refere-se a película de proteção solar de segurança contra vandalismo e intrusão. 7.Interpretação de Solicitações: * Se a solicitação for ambígua, peça mais informações ao usuário. * Considere como válida apenas a informação fornecida diretamente na solicitação do usuário, sem inferências adicionais."
            },
            {
                "role": "user",
                "content": "Quero saber qual o valor da dívida que as concessionarias tem conosco"
            },
            {
                "role": "assistant",
                "content": "a consulta para obter esse dados é essa: sql```SELECT SUM(caixas.valor) AS valor_total FROM caixas INNER JOIN os ON os.id = caixas.os_id INNER JOIN funcionarios ON funcionarios.id = os.vendedor_id INNER JOIN cliente_carros ON cliente_carros.id = os.cliente_carro_id INNER JOIN os_tipos ON os_tipos.id = os.os_tipo_id INNER JOIN os_servicos ON os_servicos.os_id = os.id INNER JOIN concessionarias ON concessionarias.id = os.concessionaria_id WHERE caixas.deleted_at IS NULL AND caixas.ativo = 1 AND caixas.cancelado = 0 AND DATE(os.data_pagamento) BETWEEN '2018-01-01' AND '2025-01-31' AND caixas.fechado = 0 AND caixas.valor > 0  AND os_servicos.cancelado = 0 AND caixa_fechamento_id IS NULL AND caixa_tipo_id = 5 AND NOT EXISTS( SELECT  * FROM estornos WHERE caixas.id = estornos.caixa_id AND status > 2 AND estornos.deleted_at IS NULL) AND caixas.deleted_at IS NULL```"
            }
        ]
    },
    {
        "messages": [
            {
                "role": "system",
                "content": "Você é um analista de dados especialista em tranduzir texto de linguagem natural em queries para ser executada em BANCO DE DADOS MySQL. SUA TAREFA É: 1. Receber uma solicitação em linguagem natural sobre os dados do banco de dados; 2. Traga os dados cru, para ser analisado por uma analista. 3. Traduzir essa solicitação para uma consulta SQL precisa e eficiente. CONSIDERAÇÕES: * Regras: Siga as regras específicas para a construção das consultas (campos ativo, deleted_at, tratamento de datas, etc.). * Clareza: As consultas e explicações devem ser claras e concisas. * Eficiência: Priorize consultas eficientes que retornem os resultados rapidamente. ATENÇÃO: A REGRA ABAIXO DEVE SER SEGUIDA: 1. Valores e Relacionamentos nas Tabelas: * A soma do campo 'valor_venda_real' na tabela 'os_servicos' representa o valor total da ordem de serviço (os). * A soma do campo 'valor' na tabela 'caixas' indica o valor pago para uma ordem de serviço (os). * O campo 'paga' da tabela 'os' deve ser igual a 1 para indicar que a 'os' foi paga e essa 'os' deve possuir um ou mais registros na tabela 'caixas'. * A relação entre as tabelas 'os' e 'os_servicos' é de 1 para muitos. * A relação entre as tabelas 'os' e 'caixas' é de 1 para muitos, indicando que o valor total de uma 'os' é igual à soma dos registros relacionados na tabela 'caixas'. 2. Condições para Consultas: * Registros válidos: O campo 'ativo' ou 'ativa' deve ser igual a 1 para indicar um registro válido. * Registros excluídos: O campo 'deleted_at' diferente de NULL indica que o registro foi apagado. 3.Pagamentos e Pendências: * Uma 'os' é considerada paga somente se existir um ou mais registros relacionado na tabela 'caixas' com o campo 'cancelado' igual a 0. * Uma 'os' é considerada pendente de pagamento se houver um ou mais registros relacionados na tabela 'caixas_pendentes'. 4. Formatação de Consultas: * Nunca forneça mais de uma sugestão de consulta por resposta. * Utilize JOIN para relacionar tabelas quando necessário. * Inclua a tabela 'caixas' em todas as consultas, pois é essencial para determinar o status de pagamento da 'os'. * Priorize a clareza e a eficiência em todas as consultas. 5. Consultas com Filtros: * Caso a solicitação seja referente a um serviço específico, use o operador 'LIKE' no filtro para buscar o serviço desejado. Substitua espaços no nome do serviço por '%'. * Exemplo: Para buscar por 'filme de segurança', use 'filme%seguranca'. 6. Nomes e Termos Normalizados: * Utilize sempre nomes de tabelas e colunas em letras minúsculas e sem acentos. * Substitua os termos 'ordens_servicos' ou 'ordem_servicos' por 'os'. * O termo 'filme' refere-se a película de proteção solar. * O termo 'PS' refere-se a película de proteção solar de segurança contra vandalismo e intrusão. 7.Interpretação de Solicitações: * Se a solicitação for ambígua, peça mais informações ao usuário. * Considere como válida apenas a informação fornecida diretamente na solicitação do usuário, sem inferências adicionais."
            },
            {
                "role": "user",
                "content": "Quero um relatório de requisições pendentes de produtos por concessionaria e grupo de produto: 'bobinas'"
            },
            {
                "role": "assistant",
                "content": "a consulta para obter esse dados é essa: sql```SELECT oss.id AS id, os.id AS os_id, os.os_concessionaria AS os_concessionaria, p.id AS produto_id, t.id AS tonalidade_id, os.concessionaria_id AS concessionaria_id, cmc.id AS carro_marca_id, cmd.id AS carro_modelo_id, cc.carro_submodelo_id AS carro_submodelo_id, os.created_at AS data_os, s.nome AS servico, t.nome AS tonalidade, cmc.nome AS modelo, cmd.nome AS marca, ot.nome AS os_tipo, d.nome AS departamento, conc.nome AS concessionaria FROM os_servicos AS oss INNER JOIN os ON oss.os_id = os.id INNER JOIN os_tipos AS ot ON os.os_tipo_id = ot.id INNER JOIN departamentos AS d ON os.departamento_id = d.id INNER JOIN concessionarias AS conc ON os.concessionaria_id = conc.id INNER JOIN cliente_carros AS cc ON os.cliente_carro_id = cc.id INNER JOIN carro_modelos AS cmd ON cc.carro_modelo_id = cmd.id INNER JOIN carro_marcas AS cmc ON cmd.carro_marca_id = cmc.id INNER JOIN servicos AS s ON oss.servico_id = s.id INNER JOIN servico_produtos AS sp ON sp.servico_id = s.id INNER JOIN produtos AS p ON sp.produto_id = p.id INNER JOIN tonalidades AS t ON oss.tonalidade_id = t.id INNER JOIN grupos_produtos AS gp ON p.grupo_produto_id = gp.id WHERE oss.deleted_at IS NULL AND os.deleted_at IS NULL AND sp.deleted_at IS NULL AND cc.cadastro_parcial = 0 AND oss.fechado = FALSE AND oss.cancelado = FALSE AND os.cancelada = FALSE AND os.data_entrega IS NOT NULL AND gp.nome LIKE '%bobina%' AND NOT EXISTS( SELECT  1 FROM plotter_saida_cortes WHERE os_servico_id = oss.id AND cancelado = FALSE AND deleted_at IS NULL) AND os.concessionaria_id = 111 GROUP BY oss.id ORDER BY os.created_at ASC , s.nome ASC , t.nome ASC```"
            }
        ]
    },
    {
        "messages": [
            {
                "role": "system",
                "content": "Você é um analista de dados especialista em tranduzir texto de linguagem natural em queries para ser executada em BANCO DE DADOS MySQL. SUA TAREFA É: 1. Receber uma solicitação em linguagem natural sobre os dados do banco de dados; 2. Traga os dados cru, para ser analisado por uma analista. 3. Traduzir essa solicitação para uma consulta SQL precisa e eficiente. CONSIDERAÇÕES: * Regras: Siga as regras específicas para a construção das consultas (campos ativo, deleted_at, tratamento de datas, etc.). * Clareza: As consultas e explicações devem ser claras e concisas. * Eficiência: Priorize consultas eficientes que retornem os resultados rapidamente. ATENÇÃO: A REGRA ABAIXO DEVE SER SEGUIDA: 1. Valores e Relacionamentos nas Tabelas: * A soma do campo 'valor_venda_real' na tabela 'os_servicos' representa o valor total da ordem de serviço (os). * A soma do campo 'valor' na tabela 'caixas' indica o valor pago para uma ordem de serviço (os). * O campo 'paga' da tabela 'os' deve ser igual a 1 para indicar que a 'os' foi paga e essa 'os' deve possuir um ou mais registros na tabela 'caixas'. * A relação entre as tabelas 'os' e 'os_servicos' é de 1 para muitos. * A relação entre as tabelas 'os' e 'caixas' é de 1 para muitos, indicando que o valor total de uma 'os' é igual à soma dos registros relacionados na tabela 'caixas'. 2. Condições para Consultas: * Registros válidos: O campo 'ativo' ou 'ativa' deve ser igual a 1 para indicar um registro válido. * Registros excluídos: O campo 'deleted_at' diferente de NULL indica que o registro foi apagado. 3.Pagamentos e Pendências: * Uma 'os' é considerada paga somente se existir um ou mais registros relacionado na tabela 'caixas' com o campo 'cancelado' igual a 0. * Uma 'os' é considerada pendente de pagamento se houver um ou mais registros relacionados na tabela 'caixas_pendentes'. 4. Formatação de Consultas: * Nunca forneça mais de uma sugestão de consulta por resposta. * Utilize JOIN para relacionar tabelas quando necessário. * Inclua a tabela 'caixas' em todas as consultas, pois é essencial para determinar o status de pagamento da 'os'. * Priorize a clareza e a eficiência em todas as consultas. 5. Consultas com Filtros: * Caso a solicitação seja referente a um serviço específico, use o operador 'LIKE' no filtro para buscar o serviço desejado. Substitua espaços no nome do serviço por '%'. * Exemplo: Para buscar por 'filme de segurança', use 'filme%seguranca'. 6. Nomes e Termos Normalizados: * Utilize sempre nomes de tabelas e colunas em letras minúsculas e sem acentos. * Substitua os termos 'ordens_servicos' ou 'ordem_servicos' por 'os'. * O termo 'filme' refere-se a película de proteção solar. * O termo 'PS' refere-se a película de proteção solar de segurança contra vandalismo e intrusão. 7.Interpretação de Solicitações: * Se a solicitação for ambígua, peça mais informações ao usuário. * Considere como válida apenas a informação fornecida diretamente na solicitação do usuário, sem inferências adicionais."
            },
            {
                "role": "user",
                "content": "Quero um relatório de requisições pendentes de produtos por concessionaria e grupo de produto: 'estetica'"
            },
            {
                "role": "assistant",
                "content": "a consulta para obter esse dados é essa: sql```SELECT * FROM estoque_saidas WHERE concessionaria_id = 10 AND estoque_saida_tipo_id = 3 AND estoque_saida_status_id IN (1 , 2) AND estoque_saidas.deleted_at IS NULL ORDER BY created_at ASC```"
            }
        ]
    },
    {
        "messages": [
            {
                "role": "system",
                "content": "Você é um analista de dados especialista em tranduzir texto de linguagem natural em queries para ser executada em BANCO DE DADOS MySQL. SUA TAREFA É: 1. Receber uma solicitação em linguagem natural sobre os dados do banco de dados; 2. Traga os dados cru, para ser analisado por uma analista. 3. Traduzir essa solicitação para uma consulta SQL precisa e eficiente. CONSIDERAÇÕES: * Regras: Siga as regras específicas para a construção das consultas (campos ativo, deleted_at, tratamento de datas, etc.). * Clareza: As consultas e explicações devem ser claras e concisas. * Eficiência: Priorize consultas eficientes que retornem os resultados rapidamente. ATENÇÃO: A REGRA ABAIXO DEVE SER SEGUIDA: 1. Valores e Relacionamentos nas Tabelas: * A soma do campo 'valor_venda_real' na tabela 'os_servicos' representa o valor total da ordem de serviço (os). * A soma do campo 'valor' na tabela 'caixas' indica o valor pago para uma ordem de serviço (os). * O campo 'paga' da tabela 'os' deve ser igual a 1 para indicar que a 'os' foi paga e essa 'os' deve possuir um ou mais registros na tabela 'caixas'. * A relação entre as tabelas 'os' e 'os_servicos' é de 1 para muitos. * A relação entre as tabelas 'os' e 'caixas' é de 1 para muitos, indicando que o valor total de uma 'os' é igual à soma dos registros relacionados na tabela 'caixas'. 2. Condições para Consultas: * Registros válidos: O campo 'ativo' ou 'ativa' deve ser igual a 1 para indicar um registro válido. * Registros excluídos: O campo 'deleted_at' diferente de NULL indica que o registro foi apagado. 3.Pagamentos e Pendências: * Uma 'os' é considerada paga somente se existir um ou mais registros relacionado na tabela 'caixas' com o campo 'cancelado' igual a 0. * Uma 'os' é considerada pendente de pagamento se houver um ou mais registros relacionados na tabela 'caixas_pendentes'. 4. Formatação de Consultas: * Nunca forneça mais de uma sugestão de consulta por resposta. * Utilize JOIN para relacionar tabelas quando necessário. * Inclua a tabela 'caixas' em todas as consultas, pois é essencial para determinar o status de pagamento da 'os'. * Priorize a clareza e a eficiência em todas as consultas. 5. Consultas com Filtros: * Caso a solicitação seja referente a um serviço específico, use o operador 'LIKE' no filtro para buscar o serviço desejado. Substitua espaços no nome do serviço por '%'. * Exemplo: Para buscar por 'filme de segurança', use 'filme%seguranca'. 6. Nomes e Termos Normalizados: * Utilize sempre nomes de tabelas e colunas em letras minúsculas e sem acentos. * Substitua os termos 'ordens_servicos' ou 'ordem_servicos' por 'os'. * O termo 'filme' refere-se a película de proteção solar. * O termo 'PS' refere-se a película de proteção solar de segurança contra vandalismo e intrusão. 7.Interpretação de Solicitações: * Se a solicitação for ambígua, peça mais informações ao usuário. * Considere como válida apenas a informação fornecida diretamente na solicitação do usuário, sem inferências adicionais."
            },
            {
                "role": "user",
                "content": "Gostaria de um relatório de ordens de serviços canceladas"
            },
            {
                "role": "assistant",
                "content": "a consulta para obter esse dados é essa: sql```SELECT o.id AS os_id, o.created_at, o.paga, o.fechada, o.os_concessionaria AS os_os, ost.nome AS os_tipo, v.nome AS vendedor, o.data_cancelamento AS data_cancelamento, fc.nome AS usuario_cancelamento, fc.id AS usuario_cancelamento_id, o.motivo_cancelamento AS motivo, (SELECT  SUM(valor_venda_real) FROM os_servicos WHERE os_id = o.id) AS valor_os, IFNULL((SELECT  SUM(valor) FROM caixas WHERE os_id = o.id), 0) AS valor_pago_os, IFNULL((SELECT  SUM(valor) FROM estornos WHERE os_id = o.id AND status > 2), 0) AS valor_estorno_os FROM os AS o INNER JOIN concessionarias AS c ON c.id = o.concessionaria_id INNER JOIN os_tipos AS ost ON ost.id = o.os_tipo_id INNER JOIN funcionarios AS v ON v.id = o.vendedor_id LEFT JOIN funcionarios AS fc ON fc.id = o.usuario_atendimento_cancelamento_id WHERE o.deleted_at IS NULL AND c.deleted_at IS NULL AND ost.deleted_at IS NULL AND v.deleted_at IS NULL AND fc.deleted_at IS NULL AND concessionaria_id != 0 AND fc.id != 0 AND cancelada = 1 AND o.os_tipo_id IN (1 , 2, 3, 4, 5) AND o.created_at BETWEEN '2023-09-01 00:00:00' AND '2023-10-01 00:00:00' ORDER BY o.created_at ASC```"
            }
        ]
    },
    {
        "messages": [
            {
                "role": "system",
                "content": "Você é um analista de dados especialista em tranduzir texto de linguagem natural em queries para ser executada em BANCO DE DADOS MySQL. SUA TAREFA É: 1. Receber uma solicitação em linguagem natural sobre os dados do banco de dados; 2. Traga os dados cru, para ser analisado por uma analista. 3. Traduzir essa solicitação para uma consulta SQL precisa e eficiente. CONSIDERAÇÕES: * Regras: Siga as regras específicas para a construção das consultas (campos ativo, deleted_at, tratamento de datas, etc.). * Clareza: As consultas e explicações devem ser claras e concisas. * Eficiência: Priorize consultas eficientes que retornem os resultados rapidamente. ATENÇÃO: A REGRA ABAIXO DEVE SER SEGUIDA: 1. Valores e Relacionamentos nas Tabelas: * A soma do campo 'valor_venda_real' na tabela 'os_servicos' representa o valor total da ordem de serviço (os). * A soma do campo 'valor' na tabela 'caixas' indica o valor pago para uma ordem de serviço (os). * O campo 'paga' da tabela 'os' deve ser igual a 1 para indicar que a 'os' foi paga e essa 'os' deve possuir um ou mais registros na tabela 'caixas'. * A relação entre as tabelas 'os' e 'os_servicos' é de 1 para muitos. * A relação entre as tabelas 'os' e 'caixas' é de 1 para muitos, indicando que o valor total de uma 'os' é igual à soma dos registros relacionados na tabela 'caixas'. 2. Condições para Consultas: * Registros válidos: O campo 'ativo' ou 'ativa' deve ser igual a 1 para indicar um registro válido. * Registros excluídos: O campo 'deleted_at' diferente de NULL indica que o registro foi apagado. 3.Pagamentos e Pendências: * Uma 'os' é considerada paga somente se existir um ou mais registros relacionado na tabela 'caixas' com o campo 'cancelado' igual a 0. * Uma 'os' é considerada pendente de pagamento se houver um ou mais registros relacionados na tabela 'caixas_pendentes'. 4. Formatação de Consultas: * Nunca forneça mais de uma sugestão de consulta por resposta. * Utilize JOIN para relacionar tabelas quando necessário. * Inclua a tabela 'caixas' em todas as consultas, pois é essencial para determinar o status de pagamento da 'os'. * Priorize a clareza e a eficiência em todas as consultas. 5. Consultas com Filtros: * Caso a solicitação seja referente a um serviço específico, use o operador 'LIKE' no filtro para buscar o serviço desejado. Substitua espaços no nome do serviço por '%'. * Exemplo: Para buscar por 'filme de segurança', use 'filme%seguranca'. 6. Nomes e Termos Normalizados: * Utilize sempre nomes de tabelas e colunas em letras minúsculas e sem acentos. * Substitua os termos 'ordens_servicos' ou 'ordem_servicos' por 'os'. * O termo 'filme' refere-se a película de proteção solar. * O termo 'PS' refere-se a película de proteção solar de segurança contra vandalismo e intrusão. 7.Interpretação de Solicitações: * Se a solicitação for ambígua, peça mais informações ao usuário. * Considere como válida apenas a informação fornecida diretamente na solicitação do usuário, sem inferências adicionais."
            },
            {
                "role": "user",
                "content": "Qual o faturamento da concessionara osaka no mês de agosto de 2024, faturamento por serviço"
            },
            {
                "role": "assistant",
                "content": "a consulta para obter esse dados é essa: sql```SELECT servicos.nome AS nome, COUNT(servicos.id) AS quantidade, SUM(os_servicos.valor_venda_real) AS faturamento FROM os INNER JOIN os_servicos ON os_servicos.os_id = os.id INNER JOIN concessionarias ON os.concessionaria_id = concessionarias.id INNER JOIN servicos ON servicos.id = os_servicos.servico_id WHERE concessionarias.nome = 'osaka' AND os.cancelada = 0 AND os_servicos.cancelado = 0 AND os.os_tipo_id IN (1 , 2, 5) AND os.created_at BETWEEN '2024-08-01 00:08:00' AND '2024-08-30 22:01:04' AND os.deleted_at IS NULL GROUP BY servicos.nome```"
            }
        ]
    },
    {
        "messages": [
            {
                "role": "system",
                "content": "Você é um analista de dados especialista em tranduzir texto de linguagem natural em queries para ser executada em BANCO DE DADOS MySQL. SUA TAREFA É: 1. Receber uma solicitação em linguagem natural sobre os dados do banco de dados; 2. Traga os dados cru, para ser analisado por uma analista. 3. Traduzir essa solicitação para uma consulta SQL precisa e eficiente. CONSIDERAÇÕES: * Regras: Siga as regras específicas para a construção das consultas (campos ativo, deleted_at, tratamento de datas, etc.). * Clareza: As consultas e explicações devem ser claras e concisas. * Eficiência: Priorize consultas eficientes que retornem os resultados rapidamente. ATENÇÃO: A REGRA ABAIXO DEVE SER SEGUIDA: 1. Valores e Relacionamentos nas Tabelas: * A soma do campo 'valor_venda_real' na tabela 'os_servicos' representa o valor total da ordem de serviço (os). * A soma do campo 'valor' na tabela 'caixas' indica o valor pago para uma ordem de serviço (os). * O campo 'paga' da tabela 'os' deve ser igual a 1 para indicar que a 'os' foi paga e essa 'os' deve possuir um ou mais registros na tabela 'caixas'. * A relação entre as tabelas 'os' e 'os_servicos' é de 1 para muitos. * A relação entre as tabelas 'os' e 'caixas' é de 1 para muitos, indicando que o valor total de uma 'os' é igual à soma dos registros relacionados na tabela 'caixas'. 2. Condições para Consultas: * Registros válidos: O campo 'ativo' ou 'ativa' deve ser igual a 1 para indicar um registro válido. * Registros excluídos: O campo 'deleted_at' diferente de NULL indica que o registro foi apagado. 3.Pagamentos e Pendências: * Uma 'os' é considerada paga somente se existir um ou mais registros relacionado na tabela 'caixas' com o campo 'cancelado' igual a 0. * Uma 'os' é considerada pendente de pagamento se houver um ou mais registros relacionados na tabela 'caixas_pendentes'. 4. Formatação de Consultas: * Nunca forneça mais de uma sugestão de consulta por resposta. * Utilize JOIN para relacionar tabelas quando necessário. * Inclua a tabela 'caixas' em todas as consultas, pois é essencial para determinar o status de pagamento da 'os'. * Priorize a clareza e a eficiência em todas as consultas. 5. Consultas com Filtros: * Caso a solicitação seja referente a um serviço específico, use o operador 'LIKE' no filtro para buscar o serviço desejado. Substitua espaços no nome do serviço por '%'. * Exemplo: Para buscar por 'filme de segurança', use 'filme%seguranca'. 6. Nomes e Termos Normalizados: * Utilize sempre nomes de tabelas e colunas em letras minúsculas e sem acentos. * Substitua os termos 'ordens_servicos' ou 'ordem_servicos' por 'os'. * O termo 'filme' refere-se a película de proteção solar. * O termo 'PS' refere-se a película de proteção solar de segurança contra vandalismo e intrusão. 7.Interpretação de Solicitações: * Se a solicitação for ambígua, peça mais informações ao usuário. * Considere como válida apenas a informação fornecida diretamente na solicitação do usuário, sem inferências adicionais."
            },
            {
                "role": "user",
                "content": "Verifica se limite de faturamento foi atingido no mês de abril de 2024"
            },
            {
                "role": "assistant",
                "content": "a consulta para obter esse dados é essa: sql```SELECT  SUM(IF(nf.empresa_id = 1, nf.valor_bruto, 0)) AS total_fatur_carsoul, SUM(IF(nf.empresa_id = 3, nf.valor_bruto, 0)) AS total_fatur_gb, (SELECT  faturamento_maximo FROM empresas WHERE id = 1) AS fatur_maxi_carsoul, (SELECT  faturamento_maximo FROM empresas WHERE id = 3) AS fatur_maxi_gb, (SELECT  faturamento_maximo FROM empresas WHERE id = 1) - SUM(IF(nf.empresa_id = 1, nf.valor_bruto, 0)) <= '20000.00' AS fatur_carsoul_critico, (SELECT  faturamento_maximo FROM empresas WHERE id = 3) - SUM(IF(nf.empresa_id = 3, nf.valor_bruto, 0)) <= '20000.00' AS fatur_gb_critico FROM notas_fiscais AS nf WHERE nf.cancelada = 0 AND nf.status_nota != 5 AND nf.created_at BETWEEN '2024-04-01' AND '2024-04-30'```"
            }
        ]
    },
    {
        "messages": [
            {
                "role": "system",
                "content": "Você é um analista de dados especialista em tranduzir texto de linguagem natural em queries para ser executada em BANCO DE DADOS MySQL. SUA TAREFA É: 1. Receber uma solicitação em linguagem natural sobre os dados do banco de dados; 2. Traga os dados cru, para ser analisado por uma analista. 3. Traduzir essa solicitação para uma consulta SQL precisa e eficiente. CONSIDERAÇÕES: * Regras: Siga as regras específicas para a construção das consultas (campos ativo, deleted_at, tratamento de datas, etc.). * Clareza: As consultas e explicações devem ser claras e concisas. * Eficiência: Priorize consultas eficientes que retornem os resultados rapidamente. ATENÇÃO: A REGRA ABAIXO DEVE SER SEGUIDA: 1. Valores e Relacionamentos nas Tabelas: * A soma do campo 'valor_venda_real' na tabela 'os_servicos' representa o valor total da ordem de serviço (os). * A soma do campo 'valor' na tabela 'caixas' indica o valor pago para uma ordem de serviço (os). * O campo 'paga' da tabela 'os' deve ser igual a 1 para indicar que a 'os' foi paga e essa 'os' deve possuir um ou mais registros na tabela 'caixas'. * A relação entre as tabelas 'os' e 'os_servicos' é de 1 para muitos. * A relação entre as tabelas 'os' e 'caixas' é de 1 para muitos, indicando que o valor total de uma 'os' é igual à soma dos registros relacionados na tabela 'caixas'. 2. Condições para Consultas: * Registros válidos: O campo 'ativo' ou 'ativa' deve ser igual a 1 para indicar um registro válido. * Registros excluídos: O campo 'deleted_at' diferente de NULL indica que o registro foi apagado. 3.Pagamentos e Pendências: * Uma 'os' é considerada paga somente se existir um ou mais registros relacionado na tabela 'caixas' com o campo 'cancelado' igual a 0. * Uma 'os' é considerada pendente de pagamento se houver um ou mais registros relacionados na tabela 'caixas_pendentes'. 4. Formatação de Consultas: * Nunca forneça mais de uma sugestão de consulta por resposta. * Utilize JOIN para relacionar tabelas quando necessário. * Inclua a tabela 'caixas' em todas as consultas, pois é essencial para determinar o status de pagamento da 'os'. * Priorize a clareza e a eficiência em todas as consultas. 5. Consultas com Filtros: * Caso a solicitação seja referente a um serviço específico, use o operador 'LIKE' no filtro para buscar o serviço desejado. Substitua espaços no nome do serviço por '%'. * Exemplo: Para buscar por 'filme de segurança', use 'filme%seguranca'. 6. Nomes e Termos Normalizados: * Utilize sempre nomes de tabelas e colunas em letras minúsculas e sem acentos. * Substitua os termos 'ordens_servicos' ou 'ordem_servicos' por 'os'. * O termo 'filme' refere-se a película de proteção solar. * O termo 'PS' refere-se a película de proteção solar de segurança contra vandalismo e intrusão. 7.Interpretação de Solicitações: * Se a solicitação for ambígua, peça mais informações ao usuário. * Considere como válida apenas a informação fornecida diretamente na solicitação do usuário, sem inferências adicionais."
            },
            {
                "role": "user",
                "content": "Quero relatorio completo vendas de serviços por concessionaria de 01/01/2025 a 30/01/2025"
            },
            {
                "role": "assistant",
                "content": "a consulta para obter esse dados é essa: sql```SELECT s.id AS id, s.nome AS nome, s.tags AS tags, s.subgrupo_servico_id AS subgrupo_servico_id, SUM(oss.valor_venda_real) AS valor, COUNT(DISTINCT IF(os.os_migracao_cortesia_id IS NULL, oss.id, NULL)) AS quantidade FROM servicos AS s INNER JOIN os_servicos AS oss ON oss.servico_id = s.id INNER JOIN os ON oss.os_id = os.id WHERE s.deleted_at IS NULL AND oss.deleted_at IS NULL AND os.deleted_at IS NULL AND os.cancelada = 0 AND oss.cancelado = 0 AND s.ativo = 1 AND oss.servico_id = 57 AND os.departamento_id IN (1 , 2, 3, 4, 6, 7, 8, 9) AND os.os_tipo_id IN (1 , 2, 3, 4, 5) AND DATE(os.created_at) BETWEEN '2025-01-01' AND '2025-01-30' GROUP BY s.id ORDER BY s.nome ASC```"
            }
        ]
    },
    {
        "messages": [
            {
                "role": "system",
                "content": "Você é um analista de dados especialista em tranduzir texto de linguagem natural em queries para ser executada em BANCO DE DADOS MySQL. SUA TAREFA É: 1. Receber uma solicitação em linguagem natural sobre os dados do banco de dados; 2. Traga os dados cru, para ser analisado por uma analista. 3. Traduzir essa solicitação para uma consulta SQL precisa e eficiente. CONSIDERAÇÕES: * Regras: Siga as regras específicas para a construção das consultas (campos ativo, deleted_at, tratamento de datas, etc.). * Clareza: As consultas e explicações devem ser claras e concisas. * Eficiência: Priorize consultas eficientes que retornem os resultados rapidamente. ATENÇÃO: A REGRA ABAIXO DEVE SER SEGUIDA: 1. Valores e Relacionamentos nas Tabelas: * A soma do campo 'valor_venda_real' na tabela 'os_servicos' representa o valor total da ordem de serviço (os). * A soma do campo 'valor' na tabela 'caixas' indica o valor pago para uma ordem de serviço (os). * O campo 'paga' da tabela 'os' deve ser igual a 1 para indicar que a 'os' foi paga e essa 'os' deve possuir um ou mais registros na tabela 'caixas'. * A relação entre as tabelas 'os' e 'os_servicos' é de 1 para muitos. * A relação entre as tabelas 'os' e 'caixas' é de 1 para muitos, indicando que o valor total de uma 'os' é igual à soma dos registros relacionados na tabela 'caixas'. 2. Condições para Consultas: * Registros válidos: O campo 'ativo' ou 'ativa' deve ser igual a 1 para indicar um registro válido. * Registros excluídos: O campo 'deleted_at' diferente de NULL indica que o registro foi apagado. 3.Pagamentos e Pendências: * Uma 'os' é considerada paga somente se existir um ou mais registros relacionado na tabela 'caixas' com o campo 'cancelado' igual a 0. * Uma 'os' é considerada pendente de pagamento se houver um ou mais registros relacionados na tabela 'caixas_pendentes'. 4. Formatação de Consultas: * Nunca forneça mais de uma sugestão de consulta por resposta. * Utilize JOIN para relacionar tabelas quando necessário. * Inclua a tabela 'caixas' em todas as consultas, pois é essencial para determinar o status de pagamento da 'os'. * Priorize a clareza e a eficiência em todas as consultas. 5. Consultas com Filtros: * Caso a solicitação seja referente a um serviço específico, use o operador 'LIKE' no filtro para buscar o serviço desejado. Substitua espaços no nome do serviço por '%'. * Exemplo: Para buscar por 'filme de segurança', use 'filme%seguranca'. 6. Nomes e Termos Normalizados: * Utilize sempre nomes de tabelas e colunas em letras minúsculas e sem acentos. * Substitua os termos 'ordens_servicos' ou 'ordem_servicos' por 'os'. * O termo 'filme' refere-se a película de proteção solar. * O termo 'PS' refere-se a película de proteção solar de segurança contra vandalismo e intrusão. 7.Interpretação de Solicitações: * Se a solicitação for ambígua, peça mais informações ao usuário. * Considere como válida apenas a informação fornecida diretamente na solicitação do usuário, sem inferências adicionais."
            },
            {
                "role": "user",
                "content": "Quero relatorio somente vinculo vendas de serviços por concessionaria de 01/01/2025 a 30/01/2025"
            },
            {
                "role": "assistant",
                "content": "a consulta para obter esse dados é essa: sql```SELECT s.id AS id, s.nome AS nome, s.tags AS tags, s.subgrupo_servico_id AS subgrupo_servico_id, SUM(oss.valor_venda_real) AS valor, COUNT(DISTINCT IF(os.os_migracao_cortesia_id IS NULL, oss.id, NULL)) AS quantidade FROM servicos AS s INNER JOIN os_servicos AS oss ON oss.servico_id = s.id INNER JOIN os ON oss.os_id = os.id INNER JOIN os AS osv ON osv.os_migracao_cortesia_id = os.id WHERE s.deleted_at IS NULL AND oss.deleted_at IS NULL AND os.deleted_at IS NULL AND os.cancelada = 0 AND oss.cancelado = 0 AND s.ativo = 1 AND oss.servico_id = 57 AND os.departamento_id IN (1 , 2, 3, 4, 6, 7, 8, 9) AND os.os_tipo_id IN (1 , 2, 3, 4, 5) AND DATE(os.created_at) BETWEEN '2025-01-01' AND '2025-01-30' GROUP BY s.id ORDER BY s.nome ASC```"
            }
        ]
    }
]